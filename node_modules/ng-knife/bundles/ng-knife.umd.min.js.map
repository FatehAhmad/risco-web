{"version":3,"sources":["ng://ng-knife/lib/directives/no-spaces.directive.ts","ng://ng-knife/lib/directives/no-copy-paste.directive.ts","ng://ng-knife/lib/directives/alphanumeric.directive.ts","ng://ng-knife/lib/directives/only-numbers.directive.ts","ng://ng-knife/lib/ng-knife.module.ts"],"names":["NoSpacesDirective","prototype","onKeyDown","e","keyCode","Directive","args","selector","HostListener","NoCopyPasteDirective","noCopy","noPaste","noCut","AlphanumericDirective","RegExp","test","key","OnlyNumbersDirective","pasteClipboard","data","clipboardData","getData","this","onlyNumbersRegExp","ctrlKey","metaKey","NgKnifeModule","NgModule","imports","declarations","exports"],"mappings":"8PAAA,IAAAA,EAAA,gCAMuCA,EAAAC,UAAAC,UAArC,SAA+CC,GAC7C,QAAuB,KAAdA,EAAEC,8BALdC,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,yDAGTC,EAAAA,aAAYF,KAAA,CAAC,UAAW,CAAC,gBAN5B,GCAAG,EAAA,gCAOoCA,EAAAR,UAAAS,OAAlC,SAAyCP,GACvC,OAAO,GAE0BM,EAAAR,UAAAU,QAAnC,SAA2CR,GACzC,OAAO,GAEwBM,EAAAR,UAAAW,MAAjC,SAAuCT,GACrC,OAAO,uBAZVE,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,yDAITC,EAAAA,aAAYF,KAAA,CAAC,OAAQ,CAAC,4BAGtBE,EAAAA,aAAYF,KAAA,CAAC,QAAS,CAAC,0BAGvBE,EAAAA,aAAYF,KAAA,CAAC,MAAO,CAAC,gBAbxB,GCAAO,EAAA,gCAOuCA,EAAAZ,UAAAC,UAArC,SAA+CC,GAC7C,OAAsB,IAAdA,EAAEC,SAA+B,KAAdD,EAAEC,SAAgC,KAAdD,EAAEC,SAAgC,KAAdD,EAAEC,SAC5D,IAAKU,OAAO,mBAAoBC,KAAKZ,EAAEa,0BAPnDX,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,6DAITC,EAAAA,aAAYF,KAAA,CAAC,UAAW,CAAC,gBAP5B,GCAAW,EAAA,+CAO8B,IAAIH,OAAO,iBAEJG,EAAAhB,UAAAiB,eAAnC,SAAkDf,GAChD,IAAMgB,EAAOhB,EAAEiB,cAAcC,QAAQ,QACrC,QAAOC,KAAKC,kBAAkBR,KAAKI,IAGAF,EAAAhB,UAAAC,UAArC,SAA+CC,GAC7C,SAAQA,EAAEqB,UAAWrB,EAAEsB,SAAyB,IAAdtB,EAAEC,SAA+B,IAAdD,EAAEC,SAA+B,KAAdD,EAAEC,SAAgC,KAAdD,EAAEC,SAC7E,KAAdD,EAAEC,SAAgC,KAAdD,EAAEC,SAAgC,KAAdD,EAAEC,UAAyBkB,KAAKC,kBAAkBR,KAAKZ,EAAEa,0BAdvGX,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,iEAMTC,EAAAA,aAAYF,KAAA,CAAC,QAAS,CAAC,8BAKvBE,EAAAA,aAAYF,KAAA,CAAC,UAAW,CAAC,gBAd5B,GCAAoB,EAAA,oDAMCC,EAAAA,SAAQrB,KAAA,CAAC,CACRsB,QAAS,GAETC,aAAc,CACZ7B,EACAS,EACAI,EACAI,GAEFa,QAAS,CACP9B,EACAS,EACAI,EACAI,SAnBJ","sourcesContent":["import { Directive, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[knifeNoSpaces]'\n})\nexport class NoSpacesDirective {\n  @HostListener('keydown', ['$event']) onKeyDown(e: KeyboardEvent): boolean {\n    return !(e.keyCode === 32);\n  }\n}\n","import { Directive, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[knifeNoCopyPaste]'\n})\nexport class NoCopyPasteDirective {\n\n  @HostListener('copy', ['$event']) noCopy(e): boolean {\n    return false;\n  }\n  @HostListener('paste', ['$event']) noPaste(e): boolean {\n    return false;\n  }\n  @HostListener('cut', ['$event']) noCut(e): boolean {\n    return false;\n  }\n}\n","import { Directive, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[knifeAlphanumeric]'\n})\nexport class AlphanumericDirective {\n\n  @HostListener('keydown', ['$event']) onKeyDown(e: KeyboardEvent): boolean {\n    return (e.keyCode === 8 || e.keyCode === 32 || e.keyCode === 37 || e.keyCode === 39)\n    ? true : (new RegExp('^[a-zA-Z0-9_]*$')).test(e.key);\n  }\n\n}\n","import { Directive, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[knifeOnlyNumbers]'\n})\nexport class OnlyNumbersDirective {\n\n  onlyNumbersRegExp: RegExp = new RegExp('^\\\\d+$');\n\n  @HostListener('paste', ['$event']) pasteClipboard(e: ClipboardEvent): boolean {\n    const data = e.clipboardData.getData('text');\n    return this.onlyNumbersRegExp.test(data) ? true : false;\n  }\n\n  @HostListener('keydown', ['$event']) onKeyDown(e: KeyboardEvent): boolean {\n    return (e.ctrlKey || e.metaKey || e.keyCode === 8 || e.keyCode === 9 || e.keyCode === 37 || e.keyCode === 39 ||\n       e.keyCode === 46 || e.keyCode === 91 || e.keyCode === 93) ? true : this.onlyNumbersRegExp.test(e.key);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { NoSpacesDirective } from './directives/no-spaces.directive';\nimport { NoCopyPasteDirective } from './directives/no-copy-paste.directive';\nimport { AlphanumericDirective } from './directives/alphanumeric.directive';\nimport { OnlyNumbersDirective } from './directives/only-numbers.directive';\n\n@NgModule({\n  imports: [\n  ],\n  declarations: [\n    NoSpacesDirective,\n    NoCopyPasteDirective,\n    AlphanumericDirective,\n    OnlyNumbersDirective\n  ],\n  exports: [\n    NoSpacesDirective,\n    NoCopyPasteDirective,\n    AlphanumericDirective,\n    OnlyNumbersDirective\n  ]\n})\nexport class NgKnifeModule { }\n"]}