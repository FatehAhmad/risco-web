{"version":3,"file":"ng-knife.umd.js.map","sources":["ng://ng-knife/lib/directives/no-spaces.directive.ts","ng://ng-knife/lib/directives/no-copy-paste.directive.ts","ng://ng-knife/lib/directives/alphanumeric.directive.ts","ng://ng-knife/lib/directives/only-numbers.directive.ts","ng://ng-knife/lib/ng-knife.module.ts"],"sourcesContent":["import { Directive, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[knifeNoSpaces]'\n})\nexport class NoSpacesDirective {\n  @HostListener('keydown', ['$event']) onKeyDown(e: KeyboardEvent): boolean {\n    return !(e.keyCode === 32);\n  }\n}\n","import { Directive, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[knifeNoCopyPaste]'\n})\nexport class NoCopyPasteDirective {\n\n  @HostListener('copy', ['$event']) noCopy(e): boolean {\n    return false;\n  }\n  @HostListener('paste', ['$event']) noPaste(e): boolean {\n    return false;\n  }\n  @HostListener('cut', ['$event']) noCut(e): boolean {\n    return false;\n  }\n}\n","import { Directive, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[knifeAlphanumeric]'\n})\nexport class AlphanumericDirective {\n\n  @HostListener('keydown', ['$event']) onKeyDown(e: KeyboardEvent): boolean {\n    return (e.keyCode === 8 || e.keyCode === 32 || e.keyCode === 37 || e.keyCode === 39)\n    ? true : (new RegExp('^[a-zA-Z0-9_]*$')).test(e.key);\n  }\n\n}\n","import { Directive, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[knifeOnlyNumbers]'\n})\nexport class OnlyNumbersDirective {\n\n  onlyNumbersRegExp: RegExp = new RegExp('^\\\\d+$');\n\n  @HostListener('paste', ['$event']) pasteClipboard(e: ClipboardEvent): boolean {\n    const data = e.clipboardData.getData('text');\n    return this.onlyNumbersRegExp.test(data) ? true : false;\n  }\n\n  @HostListener('keydown', ['$event']) onKeyDown(e: KeyboardEvent): boolean {\n    return (e.ctrlKey || e.metaKey || e.keyCode === 8 || e.keyCode === 9 || e.keyCode === 37 || e.keyCode === 39 ||\n       e.keyCode === 46 || e.keyCode === 91 || e.keyCode === 93) ? true : this.onlyNumbersRegExp.test(e.key);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { NoSpacesDirective } from './directives/no-spaces.directive';\nimport { NoCopyPasteDirective } from './directives/no-copy-paste.directive';\nimport { AlphanumericDirective } from './directives/alphanumeric.directive';\nimport { OnlyNumbersDirective } from './directives/only-numbers.directive';\n\n@NgModule({\n  imports: [\n  ],\n  declarations: [\n    NoSpacesDirective,\n    NoCopyPasteDirective,\n    AlphanumericDirective,\n    OnlyNumbersDirective\n  ],\n  exports: [\n    NoSpacesDirective,\n    NoCopyPasteDirective,\n    AlphanumericDirective,\n    OnlyNumbersDirective\n  ]\n})\nexport class NgKnifeModule { }\n"],"names":["Directive","HostListener","NgModule"],"mappings":";;;;;;;;;;AAAA;;;;;;;QAMuC,qCAAS;;;;YAA9C,UAA+C,CAAgB;gBAC7D,OAAO,EAAE,CAAC,CAAC,OAAO,KAAK,EAAE,CAAC,CAAC;aAC5B;;oBANFA,cAAS,SAAC;wBACT,QAAQ,EAAE,iBAAiB;qBAC5B;;;gCAEEC,iBAAY,SAAC,SAAS,EAAE,CAAC,QAAQ,CAAC;;gCANrC;;;;;;;ACAA;;;;;;;QAOoC,qCAAM;;;;YAAxC,UAAyC,CAAC;gBACxC,OAAO,KAAK,CAAC;aACd;;;;;QACkC,sCAAO;;;;YAA1C,UAA2C,CAAC;gBAC1C,OAAO,KAAK,CAAC;aACd;;;;;QACgC,oCAAK;;;;YAAtC,UAAuC,CAAC;gBACtC,OAAO,KAAK,CAAC;aACd;;oBAbFD,cAAS,SAAC;wBACT,QAAQ,EAAE,oBAAoB;qBAC/B;;;6BAGEC,iBAAY,SAAC,MAAM,EAAE,CAAC,QAAQ,CAAC;8BAG/BA,iBAAY,SAAC,OAAO,EAAE,CAAC,QAAQ,CAAC;4BAGhCA,iBAAY,SAAC,KAAK,EAAE,CAAC,QAAQ,CAAC;;mCAbjC;;;;;;;ACAA;;;;;;;QAOuC,yCAAS;;;;YAA9C,UAA+C,CAAgB;gBAC7D,OAAO,CAAC,CAAC,CAAC,OAAO,KAAK,CAAC,IAAI,CAAC,CAAC,OAAO,KAAK,EAAE,IAAI,CAAC,CAAC,OAAO,KAAK,EAAE,IAAI,CAAC,CAAC,OAAO,KAAK,EAAE;sBACjF,IAAI,GAAG,CAAC,IAAI,MAAM,CAAC,iBAAiB,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;aACtD;;oBARFD,cAAS,SAAC;wBACT,QAAQ,EAAE,qBAAqB;qBAChC;;;gCAGEC,iBAAY,SAAC,SAAS,EAAE,CAAC,QAAQ,CAAC;;oCAPrC;;;;;;;ACAA;;qCAO8B,IAAI,MAAM,CAAC,QAAQ,CAAC;;;;;;QAEb,6CAAc;;;;YAAjD,UAAkD,CAAiB;gBACjE,qBAAM,IAAI,GAAG,CAAC,CAAC,aAAa,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBAC7C,OAAO,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,GAAG,KAAK,CAAC;aACzD;;;;;QAEoC,wCAAS;;;;YAA9C,UAA+C,CAAgB;gBAC7D,OAAO,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,OAAO,KAAK,CAAC,IAAI,CAAC,CAAC,OAAO,KAAK,CAAC,IAAI,CAAC,CAAC,OAAO,KAAK,EAAE,IAAI,CAAC,CAAC,OAAO,KAAK,EAAE;oBACzG,CAAC,CAAC,OAAO,KAAK,EAAE,IAAI,CAAC,CAAC,OAAO,KAAK,EAAE,IAAI,CAAC,CAAC,OAAO,KAAK,EAAE,IAAI,IAAI,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;aAC1G;;oBAfFD,cAAS,SAAC;wBACT,QAAQ,EAAE,oBAAoB;qBAC/B;;;qCAKEC,iBAAY,SAAC,OAAO,EAAE,CAAC,QAAQ,CAAC;gCAKhCA,iBAAY,SAAC,SAAS,EAAE,CAAC,QAAQ,CAAC;;mCAdrC;;;;;;;ACAA;;;;oBAMCC,aAAQ,SAAC;wBACR,OAAO,EAAE,EACR;wBACD,YAAY,EAAE;4BACZ,iBAAiB;4BACjB,oBAAoB;4BACpB,qBAAqB;4BACrB,oBAAoB;yBACrB;wBACD,OAAO,EAAE;4BACP,iBAAiB;4BACjB,oBAAoB;4BACpB,qBAAqB;4BACrB,oBAAoB;yBACrB;qBACF;;4BArBD;;;;;;;;;;;;;;;;;;;;;;;;;;;"}
