/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { Directive, HostListener } from '@angular/core';
var OnlyNumbersDirective = /** @class */ (function () {
    function OnlyNumbersDirective() {
        this.onlyNumbersRegExp = new RegExp('^\\d+$');
    }
    /**
     * @param {?} e
     * @return {?}
     */
    OnlyNumbersDirective.prototype.pasteClipboard = /**
     * @param {?} e
     * @return {?}
     */
    function (e) {
        var /** @type {?} */ data = e.clipboardData.getData('text');
        return this.onlyNumbersRegExp.test(data) ? true : false;
    };
    /**
     * @param {?} e
     * @return {?}
     */
    OnlyNumbersDirective.prototype.onKeyDown = /**
     * @param {?} e
     * @return {?}
     */
    function (e) {
        return (e.ctrlKey || e.metaKey || e.keyCode === 8 || e.keyCode === 9 || e.keyCode === 37 || e.keyCode === 39 ||
            e.keyCode === 46 || e.keyCode === 91 || e.keyCode === 93) ? true : this.onlyNumbersRegExp.test(e.key);
    };
    OnlyNumbersDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[knifeOnlyNumbers]'
                },] },
    ];
    OnlyNumbersDirective.propDecorators = {
        pasteClipboard: [{ type: HostListener, args: ['paste', ['$event'],] }],
        onKeyDown: [{ type: HostListener, args: ['keydown', ['$event'],] }]
    };
    return OnlyNumbersDirective;
}());
export { OnlyNumbersDirective };
function OnlyNumbersDirective_tsickle_Closure_declarations() {
    /** @type {?} */
    OnlyNumbersDirective.prototype.onlyNumbersRegExp;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib25seS1udW1iZXJzLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25nLWtuaWZlLyIsInNvdXJjZXMiOlsibGliL2RpcmVjdGl2ZXMvb25seS1udW1iZXJzLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsTUFBTSxlQUFlLENBQUM7OztpQ0FPMUIsSUFBSSxNQUFNLENBQUMsUUFBUSxDQUFDOzs7Ozs7SUFFYiw2Q0FBYzs7OztJQUFqRCxVQUFrRCxDQUFpQjtRQUNqRSxxQkFBTSxJQUFJLEdBQUcsQ0FBQyxDQUFDLGFBQWEsQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDN0MsTUFBTSxDQUFDLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDO0tBQ3pEOzs7OztJQUVvQyx3Q0FBUzs7OztJQUE5QyxVQUErQyxDQUFnQjtRQUM3RCxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsT0FBTyxJQUFJLENBQUMsQ0FBQyxPQUFPLElBQUksQ0FBQyxDQUFDLE9BQU8sS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDLE9BQU8sS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDLE9BQU8sS0FBSyxFQUFFLElBQUksQ0FBQyxDQUFDLE9BQU8sS0FBSyxFQUFFO1lBQ3pHLENBQUMsQ0FBQyxPQUFPLEtBQUssRUFBRSxJQUFJLENBQUMsQ0FBQyxPQUFPLEtBQUssRUFBRSxJQUFJLENBQUMsQ0FBQyxPQUFPLEtBQUssRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLGlCQUFpQixDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7S0FDMUc7O2dCQWZGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsb0JBQW9CO2lCQUMvQjs7O2lDQUtFLFlBQVksU0FBQyxPQUFPLEVBQUUsQ0FBQyxRQUFRLENBQUM7NEJBS2hDLFlBQVksU0FBQyxTQUFTLEVBQUUsQ0FBQyxRQUFRLENBQUM7OytCQWRyQzs7U0FLYSxvQkFBb0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIEhvc3RMaXN0ZW5lciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5ARGlyZWN0aXZlKHtcbiAgc2VsZWN0b3I6ICdba25pZmVPbmx5TnVtYmVyc10nXG59KVxuZXhwb3J0IGNsYXNzIE9ubHlOdW1iZXJzRGlyZWN0aXZlIHtcblxuICBvbmx5TnVtYmVyc1JlZ0V4cDogUmVnRXhwID0gbmV3IFJlZ0V4cCgnXlxcXFxkKyQnKTtcblxuICBASG9zdExpc3RlbmVyKCdwYXN0ZScsIFsnJGV2ZW50J10pIHBhc3RlQ2xpcGJvYXJkKGU6IENsaXBib2FyZEV2ZW50KTogYm9vbGVhbiB7XG4gICAgY29uc3QgZGF0YSA9IGUuY2xpcGJvYXJkRGF0YS5nZXREYXRhKCd0ZXh0Jyk7XG4gICAgcmV0dXJuIHRoaXMub25seU51bWJlcnNSZWdFeHAudGVzdChkYXRhKSA/IHRydWUgOiBmYWxzZTtcbiAgfVxuXG4gIEBIb3N0TGlzdGVuZXIoJ2tleWRvd24nLCBbJyRldmVudCddKSBvbktleURvd24oZTogS2V5Ym9hcmRFdmVudCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiAoZS5jdHJsS2V5IHx8IGUubWV0YUtleSB8fCBlLmtleUNvZGUgPT09IDggfHwgZS5rZXlDb2RlID09PSA5IHx8IGUua2V5Q29kZSA9PT0gMzcgfHwgZS5rZXlDb2RlID09PSAzOSB8fFxuICAgICAgIGUua2V5Q29kZSA9PT0gNDYgfHwgZS5rZXlDb2RlID09PSA5MSB8fCBlLmtleUNvZGUgPT09IDkzKSA/IHRydWUgOiB0aGlzLm9ubHlOdW1iZXJzUmVnRXhwLnRlc3QoZS5rZXkpO1xuICB9XG59XG4iXX0=