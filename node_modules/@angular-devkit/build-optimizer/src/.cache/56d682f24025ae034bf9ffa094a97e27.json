{"remainingRequest":"D:\\FAR\\Projects\\Risco - Working Copy\\risco-web\\risco-web\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!D:\\FAR\\Projects\\Risco - Working Copy\\risco-web\\risco-web\\node_modules\\@firebase\\installations\\dist\\index.esm.js","dependencies":[{"path":"D:\\FAR\\Projects\\Risco - Working Copy\\risco-web\\risco-web\\node_modules\\@firebase\\installations\\dist\\index.esm.js","mtime":499162500000},{"path":"D:\\FAR\\Projects\\Risco - Working Copy\\risco-web\\risco-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1582123237433},{"path":"D:\\FAR\\Projects\\Risco - Working Copy\\risco-web\\risco-web\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1527226929000}],"contextDependencies":[],"result":["import firebase from '@firebase/app';\nimport { ErrorFactory, FirebaseError } from '@firebase/util';\nimport { openDb } from 'idb';\n/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n/* global Reflect, Promise */\nvar extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b)\n            if (b.hasOwnProperty(p))\n                d[p] = b[p]; };\n    return extendStatics(d, b);\n};\nfunction __extends(d, b) {\n    extendStatics(d, b);\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\nvar __assign = function () {\n    __assign = Object.assign || function __assign(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s)\n                if (Object.prototype.hasOwnProperty.call(s, p))\n                    t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nfunction __rest(s, e) {\n    var t = {};\n    for (var p in s)\n        if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n            t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++)\n            if (e.indexOf(p[i]) < 0)\n                t[p[i]] = s[p[i]];\n    return t;\n}\nfunction __decorate(decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\")\n        r = Reflect.decorate(decorators, target, key, desc);\n    else\n        for (var i = decorators.length - 1; i >= 0; i--)\n            if (d = decorators[i])\n                r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\nfunction __param(paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); };\n}\nfunction __metadata(metadataKey, metadataValue) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\")\n        return Reflect.metadata(metadataKey, metadataValue);\n}\nfunction __awaiter(thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try {\n            step(generator.next(value));\n        }\n        catch (e) {\n            reject(e);\n        } }\n        function rejected(value) { try {\n            step(generator[\"throw\"](value));\n        }\n        catch (e) {\n            reject(e);\n        } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n}\nfunction __generator(thisArg, body) {\n    var _ = { label: 0, sent: function () { if (t[0] & 1)\n            throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f)\n            throw new TypeError(\"Generator is already executing.\");\n        while (_)\n            try {\n                if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)\n                    return t;\n                if (y = 0, t)\n                    op = [op[0] & 2, t.value];\n                switch (op[0]) {\n                    case 0:\n                    case 1:\n                        t = op;\n                        break;\n                    case 4:\n                        _.label++;\n                        return { value: op[1], done: false };\n                    case 5:\n                        _.label++;\n                        y = op[1];\n                        op = [0];\n                        continue;\n                    case 7:\n                        op = _.ops.pop();\n                        _.trys.pop();\n                        continue;\n                    default:\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                            _ = 0;\n                            continue;\n                        }\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {\n                            _.label = op[1];\n                            break;\n                        }\n                        if (op[0] === 6 && _.label < t[1]) {\n                            _.label = t[1];\n                            t = op;\n                            break;\n                        }\n                        if (t && _.label < t[2]) {\n                            _.label = t[2];\n                            _.ops.push(op);\n                            break;\n                        }\n                        if (t[2])\n                            _.ops.pop();\n                        _.trys.pop();\n                        continue;\n                }\n                op = body.call(thisArg, _);\n            }\n            catch (e) {\n                op = [6, e];\n                y = 0;\n            }\n            finally {\n                f = t = 0;\n            }\n        if (op[0] & 5)\n            throw op[1];\n        return { value: op[0] ? op[1] : void 0, done: true };\n    }\n}\nfunction __exportStar(m, exports) {\n    for (var p in m)\n        if (!exports.hasOwnProperty(p))\n            exports[p] = m[p];\n}\nfunction __values(o) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\n    if (m)\n        return m.call(o);\n    return {\n        next: function () {\n            if (o && i >= o.length)\n                o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n}\nfunction __read(o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m)\n        return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done)\n            ar.push(r.value);\n    }\n    catch (error) {\n        e = { error: error };\n    }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"]))\n                m.call(i);\n        }\n        finally {\n            if (e)\n                throw e.error;\n        }\n    }\n    return ar;\n}\nfunction __spread() {\n    for (var ar = [], i = 0; i < arguments.length; i++)\n        ar = ar.concat(__read(arguments[i]));\n    return ar;\n}\nfunction __await(v) {\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\nfunction __asyncGenerator(thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator)\n        throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\n    function verb(n) { if (g[n])\n        i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\n    function resume(n, v) { try {\n        step(g[n](v));\n    }\n    catch (e) {\n        settle(q[0][3], e);\n    } }\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n    function fulfill(value) { resume(\"next\", value); }\n    function reject(value) { resume(\"throw\", value); }\n    function settle(f, v) { if (f(v), q.shift(), q.length)\n        resume(q[0][0], q[0][1]); }\n}\nfunction __asyncDelegator(o) {\n    var i, p;\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\n}\nfunction __asyncValues(o) {\n    if (!Symbol.asyncIterator)\n        throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }\n}\nfunction __makeTemplateObject(cooked, raw) {\n    if (Object.defineProperty) {\n        Object.defineProperty(cooked, \"raw\", { value: raw });\n    }\n    else {\n        cooked.raw = raw;\n    }\n    return cooked;\n}\nfunction __importStar(mod) {\n    if (mod && mod.__esModule)\n        return mod;\n    var result = {};\n    if (mod != null)\n        for (var k in mod)\n            if (Object.hasOwnProperty.call(mod, k))\n                result[k] = mod[k];\n    result.default = mod;\n    return result;\n}\nfunction __importDefault(mod) {\n    return (mod && mod.__esModule) ? mod : { default: mod };\n}\nvar tslib_1 = Object.freeze({\n    __extends: __extends,\n    get __assign() { return __assign; },\n    __rest: __rest,\n    __decorate: __decorate,\n    __param: __param,\n    __metadata: __metadata,\n    __awaiter: __awaiter,\n    __generator: __generator,\n    __exportStar: __exportStar,\n    __values: __values,\n    __read: __read,\n    __spread: __spread,\n    __await: __await,\n    __asyncGenerator: __asyncGenerator,\n    __asyncDelegator: __asyncDelegator,\n    __asyncValues: __asyncValues,\n    __makeTemplateObject: __makeTemplateObject,\n    __importStar: __importStar,\n    __importDefault: __importDefault\n});\n/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar PENDING_TIMEOUT_MS = 10000;\nvar PACKAGE_VERSION = 'w:0.1.0'; // Will be replaced by Rollup\nvar INTERNAL_AUTH_VERSION = 'FIS_v2';\nvar INSTALLATIONS_API_URL = 'https://firebaseinstallations.googleapis.com/v1';\nvar TOKEN_EXPIRATION_BUFFER = 60 * 60 * 1000; // One hour\nvar SERVICE = 'installations';\nvar SERVICE_NAME = 'Installations';\n/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar _a;\nvar ERROR_DESCRIPTION_MAP = (_a = {},\n    _a[\"missing-app-config-values\" /* MISSING_APP_CONFIG_VALUES */] = 'Missing App configuration values.',\n    _a[\"create-installation-failed\" /* CREATE_INSTALLATION_FAILED */] = 'Could not register Firebase Installation.',\n    _a[\"generate-token-failed\" /* GENERATE_TOKEN_FAILED */] = 'Could not generate Auth Token.',\n    _a[\"not-registered\" /* NOT_REGISTERED */] = 'Firebase Installation is not registered.',\n    _a[\"installation-not-found\" /* INSTALLATION_NOT_FOUND */] = 'Firebase Installation not found.',\n    _a[\"request-failed\" /* REQUEST_FAILED */] = '{$requestName} request failed with error \"{$serverCode} {$serverStatus}: {$serverMessage}\"',\n    _a[\"app-offline\" /* APP_OFFLINE */] = 'Could not process request. Application offline.',\n    _a[\"delete-pending-registration\" /* DELETE_PENDING_REGISTRATION */] = \"Can't delete installation while there is a pending registration request.\",\n    _a);\nvar ERROR_FACTORY = new ErrorFactory(SERVICE, SERVICE_NAME, ERROR_DESCRIPTION_MAP);\n/** Returns true if error is a FirebaseError that is based on an error from the server. */\nfunction isServerError(error) {\n    return (error instanceof FirebaseError &&\n        error.code.includes(\"request-failed\" /* REQUEST_FAILED */));\n}\n/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction extractAppConfig(app) {\n    if (!app || !app.options) {\n        throw ERROR_FACTORY.create(\"missing-app-config-values\" /* MISSING_APP_CONFIG_VALUES */);\n    }\n    var appName = app.name;\n    var _a = app.options, projectId = _a.projectId, apiKey = _a.apiKey, appId = _a.appId;\n    if (!appName || !projectId || !apiKey || !appId) {\n        throw ERROR_FACTORY.create(\"missing-app-config-values\" /* MISSING_APP_CONFIG_VALUES */);\n    }\n    return { appName: appName, projectId: projectId, apiKey: apiKey, appId: appId };\n}\n/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction getInstallationsEndpoint(_a) {\n    var projectId = _a.projectId;\n    return INSTALLATIONS_API_URL + \"/projects/\" + projectId + \"/installations\";\n}\nfunction extractAuthTokenInfoFromResponse(response) {\n    return {\n        token: response.token,\n        requestStatus: 2 /* COMPLETED */,\n        expiresIn: getExpiresInFromResponseExpiresIn(response.expiresIn),\n        creationTime: Date.now()\n    };\n}\nfunction getErrorFromResponse(requestName, response) {\n    return __awaiter(this, void 0, void 0, function () {\n        var responseJson, errorData;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, response.json()];\n                case 1:\n                    responseJson = _a.sent();\n                    errorData = responseJson.error;\n                    return [2 /*return*/, ERROR_FACTORY.create(\"request-failed\" /* REQUEST_FAILED */, {\n                            requestName: requestName,\n                            serverCode: errorData.code,\n                            serverMessage: errorData.message,\n                            serverStatus: errorData.status\n                        })];\n            }\n        });\n    });\n}\nfunction getHeaders(_a) {\n    var apiKey = _a.apiKey;\n    return new Headers({\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n        'x-goog-api-key': apiKey\n    });\n}\nfunction getHeadersWithAuth(appConfig, _a) {\n    var refreshToken = _a.refreshToken;\n    var headers = getHeaders(appConfig);\n    headers.append('Authorization', getAuthorizationHeader(refreshToken));\n    return headers;\n}\nfunction getExpiresInFromResponseExpiresIn(responseExpiresIn) {\n    // This works because the server will never respond with fractions of a second.\n    return Number(responseExpiresIn.replace('s', '000'));\n}\nfunction getAuthorizationHeader(refreshToken) {\n    return INTERNAL_AUTH_VERSION + \" \" + refreshToken;\n}\n/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction createInstallation(appConfig, _a) {\n    var fid = _a.fid;\n    return __awaiter(this, void 0, void 0, function () {\n        var endpoint, headers, body, request, response, responseValue, registeredInstallationEntry;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    endpoint = getInstallationsEndpoint(appConfig);\n                    headers = getHeaders(appConfig);\n                    body = {\n                        fid: fid,\n                        authVersion: INTERNAL_AUTH_VERSION,\n                        appId: appConfig.appId,\n                        sdkVersion: PACKAGE_VERSION\n                    };\n                    request = {\n                        method: 'POST',\n                        headers: headers,\n                        body: JSON.stringify(body)\n                    };\n                    return [4 /*yield*/, fetch(endpoint, request)];\n                case 1:\n                    response = _b.sent();\n                    if (!response.ok)\n                        return [3 /*break*/, 3];\n                    return [4 /*yield*/, response.json()];\n                case 2:\n                    responseValue = _b.sent();\n                    registeredInstallationEntry = {\n                        fid: fid,\n                        registrationStatus: 2 /* COMPLETED */,\n                        refreshToken: responseValue.refreshToken,\n                        authToken: extractAuthTokenInfoFromResponse(responseValue.authToken)\n                    };\n                    return [2 /*return*/, registeredInstallationEntry];\n                case 3: throw getErrorFromResponse('Create Installation', response);\n            }\n        });\n    });\n}\n/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Returns a promise that resolves after given time passes. */\nfunction sleep(ms) {\n    return new Promise(function (resolve) {\n        setTimeout(resolve, ms);\n    });\n}\n/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction bufferToBase64UrlSafe(buffer) {\n    var array = buffer instanceof Uint8Array ? buffer : new Uint8Array(buffer);\n    var b64 = btoa(String.fromCharCode.apply(String, __spread(array)));\n    return b64.replace(/\\+/g, '-').replace(/\\//g, '_');\n}\n/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Generates a new FID using random values from Web Crypto API. */\nfunction generateFid() {\n    // A valid FID has exactly 22 base64 characters, which is 132 bits, or 16.5\n    // bytes. our implementation generates a 17 byte array instead.\n    var fidByteArray = new Uint8Array(17);\n    crypto.getRandomValues(fidByteArray);\n    // Replace the first 4 random bits with the constant FID header of 0b0111.\n    fidByteArray[0] = 112 + (fidByteArray[0] % 16);\n    return encode(fidByteArray);\n}\n/** Converts a FID Uint8Array to a base64 string representation. */\nfunction encode(fidByteArray) {\n    var b64String = bufferToBase64UrlSafe(fidByteArray);\n    // Remove the 23rd character that was added because of the extra 4 bits at the\n    // end of our 17 byte array, and the '=' padding.\n    return b64String.substr(0, 22);\n}\n/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar DATABASE_NAME = 'firebase-installations-database';\nvar DATABASE_VERSION = 1;\nvar OBJECT_STORE_NAME = 'firebase-installations-store';\nvar dbPromise = openDb(DATABASE_NAME, DATABASE_VERSION, function (upgradeDB) {\n    // We don't use 'break' in this switch statement, the fall-through\n    // behavior is what we want, because if there are multiple versions between\n    // the old version and the current version, we want ALL the migrations\n    // that correspond to those versions to run, not only the last one.\n    switch (upgradeDB.oldVersion) {\n        case 0:\n            upgradeDB.createObjectStore(OBJECT_STORE_NAME);\n    }\n});\n/** Assigns or overwrites the record for the given key with the given value. */\nfunction set(appConfig, value) {\n    return __awaiter(this, void 0, void 0, function () {\n        var key, db, tx;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    key = getKey(appConfig);\n                    return [4 /*yield*/, dbPromise];\n                case 1:\n                    db = _a.sent();\n                    tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n                    tx.objectStore(OBJECT_STORE_NAME).put(value, key);\n                    return [4 /*yield*/, tx.complete];\n                case 2:\n                    _a.sent();\n                    return [2 /*return*/, value];\n            }\n        });\n    });\n}\n/** Removes record(s) from the objectStore that match the given key. */\nfunction remove(appConfig) {\n    return __awaiter(this, void 0, void 0, function () {\n        var key, db, tx;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    key = getKey(appConfig);\n                    return [4 /*yield*/, dbPromise];\n                case 1:\n                    db = _a.sent();\n                    tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n                    tx.objectStore(OBJECT_STORE_NAME).delete(key);\n                    return [2 /*return*/, tx.complete];\n            }\n        });\n    });\n}\n/**\n * Atomically updates a record with the result of updateFn, which gets\n * called with the current value. If newValue is undefined, the record is\n * deleted instead.\n * @return Updated value\n */\nfunction update(appConfig, updateFn) {\n    return __awaiter(this, void 0, void 0, function () {\n        var key, db, tx, store, oldValue, newValue;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    key = getKey(appConfig);\n                    return [4 /*yield*/, dbPromise];\n                case 1:\n                    db = _a.sent();\n                    tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n                    store = tx.objectStore(OBJECT_STORE_NAME);\n                    return [4 /*yield*/, store.get(key)];\n                case 2:\n                    oldValue = _a.sent();\n                    newValue = updateFn(oldValue);\n                    if (newValue === oldValue) {\n                        return [2 /*return*/, newValue];\n                    }\n                    if (newValue === undefined) {\n                        store.delete(key);\n                    }\n                    else {\n                        store.put(newValue, key);\n                    }\n                    return [4 /*yield*/, tx.complete];\n                case 3:\n                    _a.sent();\n                    return [2 /*return*/, newValue];\n            }\n        });\n    });\n}\nfunction getKey(appConfig) {\n    return appConfig.appName + \"!\" + appConfig.appId;\n}\n/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Updates and returns the InstallationEntry from the database.\n * Also triggers a registration request if it is necessary and possible.\n */\nfunction getInstallationEntry(appConfig) {\n    return __awaiter(this, void 0, void 0, function () {\n        var registrationPromise, _a;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    _a = {};\n                    return [4 /*yield*/, update(appConfig, function (oldEntry) {\n                            var installationEntry = updateOrCreateFid(oldEntry);\n                            var entryWithPromise = triggerRegistrationIfNecessary(appConfig, installationEntry);\n                            registrationPromise = entryWithPromise.registrationPromise;\n                            return entryWithPromise.installationEntry;\n                        })];\n                case 1: return [2 /*return*/, (_a.installationEntry = _b.sent(),\n                        _a.registrationPromise = registrationPromise,\n                        _a)];\n            }\n        });\n    });\n}\nfunction updateOrCreateFid(oldEntry) {\n    var entry = oldEntry || {\n        fid: generateFid(),\n        registrationStatus: 0 /* NOT_STARTED */\n    };\n    if (hasInstallationRequestTimedOut(entry)) {\n        return {\n            fid: entry.fid,\n            registrationStatus: 0 /* NOT_STARTED */\n        };\n    }\n    return entry;\n}\n/**\n * If the Firebase Installation is not registered yet, this will trigger the registration\n * and return an InProgressInstallationEntry.\n */\nfunction triggerRegistrationIfNecessary(appConfig, installationEntry) {\n    if (installationEntry.registrationStatus === 0 /* NOT_STARTED */) {\n        if (!navigator.onLine) {\n            // Registration required but app is offline.\n            var registrationPromiseWithError = Promise.reject(ERROR_FACTORY.create(\"app-offline\" /* APP_OFFLINE */));\n            return {\n                installationEntry: installationEntry,\n                registrationPromise: registrationPromiseWithError\n            };\n        }\n        // Try registering. Change status to IN_PROGRESS.\n        var inProgressEntry = {\n            fid: installationEntry.fid,\n            registrationStatus: 1 /* IN_PROGRESS */,\n            registrationTime: Date.now()\n        };\n        var registrationPromise = registerInstallation(appConfig, inProgressEntry);\n        return { installationEntry: inProgressEntry, registrationPromise: registrationPromise };\n    }\n    else if (installationEntry.registrationStatus === 1 /* IN_PROGRESS */) {\n        return {\n            installationEntry: installationEntry,\n            registrationPromise: waitUntilFidRegistration(appConfig)\n        };\n    }\n    else {\n        return { installationEntry: installationEntry };\n    }\n}\n/** This will be executed only once for each new Firebase Installation. */\nfunction registerInstallation(appConfig, installationEntry) {\n    return __awaiter(this, void 0, void 0, function () {\n        var registeredInstallationEntry, e_1;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    _a.trys.push([0, 3, , 8]);\n                    return [4 /*yield*/, createInstallation(appConfig, installationEntry)];\n                case 1:\n                    registeredInstallationEntry = _a.sent();\n                    return [4 /*yield*/, set(appConfig, registeredInstallationEntry)];\n                case 2:\n                    _a.sent();\n                    return [3 /*break*/, 8];\n                case 3:\n                    e_1 = _a.sent();\n                    if (!(isServerError(e_1) && e_1.serverCode === 409))\n                        return [3 /*break*/, 5];\n                    // Server returned a \"FID can not be used\" error.\n                    // Generate a new ID next time.\n                    return [4 /*yield*/, remove(appConfig)];\n                case 4:\n                    // Server returned a \"FID can not be used\" error.\n                    // Generate a new ID next time.\n                    _a.sent();\n                    return [3 /*break*/, 7];\n                case 5:\n                    // Registration failed. Set FID as not registered.\n                    return [4 /*yield*/, set(appConfig, {\n                            fid: installationEntry.fid,\n                            registrationStatus: 0 /* NOT_STARTED */\n                        })];\n                case 6:\n                    // Registration failed. Set FID as not registered.\n                    _a.sent();\n                    _a.label = 7;\n                case 7: throw e_1;\n                case 8: return [2 /*return*/];\n            }\n        });\n    });\n}\n/** Call if FID registration is pending. */\nfunction waitUntilFidRegistration(appConfig) {\n    return __awaiter(this, void 0, void 0, function () {\n        var entry;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, updateInstallationRequest(appConfig)];\n                case 1:\n                    entry = _a.sent();\n                    _a.label = 2;\n                case 2:\n                    if (!(entry.registrationStatus === 1 /* IN_PROGRESS */))\n                        return [3 /*break*/, 5];\n                    // createInstallation request still in progress.\n                    return [4 /*yield*/, sleep(100)];\n                case 3:\n                    // createInstallation request still in progress.\n                    _a.sent();\n                    return [4 /*yield*/, updateInstallationRequest(appConfig)];\n                case 4:\n                    entry = _a.sent();\n                    return [3 /*break*/, 2];\n                case 5:\n                    if (entry.registrationStatus === 0 /* NOT_STARTED */) {\n                        throw ERROR_FACTORY.create(\"create-installation-failed\" /* CREATE_INSTALLATION_FAILED */);\n                    }\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\n/**\n * Called only if there is a CreateInstallation request in progress.\n *\n * Updates the InstallationEntry in the DB based on the status of the\n * CreateInstallation request.\n *\n * Returns the updated InstallationEntry.\n */\nfunction updateInstallationRequest(appConfig) {\n    return update(appConfig, function (oldEntry) {\n        if (!oldEntry) {\n            throw ERROR_FACTORY.create(\"installation-not-found\" /* INSTALLATION_NOT_FOUND */);\n        }\n        if (hasInstallationRequestTimedOut(oldEntry)) {\n            return {\n                fid: oldEntry.fid,\n                registrationStatus: 0 /* NOT_STARTED */\n            };\n        }\n        return oldEntry;\n    });\n}\nfunction hasInstallationRequestTimedOut(installationEntry) {\n    return (installationEntry.registrationStatus === 1 /* IN_PROGRESS */ &&\n        installationEntry.registrationTime + PENDING_TIMEOUT_MS < Date.now());\n}\n/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction getId(app) {\n    return __awaiter(this, void 0, void 0, function () {\n        var appConfig, _a, installationEntry, registrationPromise;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    appConfig = extractAppConfig(app);\n                    return [4 /*yield*/, getInstallationEntry(appConfig)];\n                case 1:\n                    _a = _b.sent(), installationEntry = _a.installationEntry, registrationPromise = _a.registrationPromise;\n                    if (registrationPromise) {\n                        // Suppress registration errors as they are not a problem for getId.\n                        registrationPromise.catch(function () { });\n                    }\n                    return [2 /*return*/, installationEntry.fid];\n            }\n        });\n    });\n}\n/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction generateAuthToken(appConfig, installationEntry) {\n    return __awaiter(this, void 0, void 0, function () {\n        var endpoint, headers, body, request, response, responseValue, completedAuthToken;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    endpoint = getGenerateAuthTokenEndpoint(appConfig, installationEntry);\n                    headers = getHeadersWithAuth(appConfig, installationEntry);\n                    body = {\n                        installation: {\n                            sdkVersion: PACKAGE_VERSION\n                        }\n                    };\n                    request = {\n                        method: 'POST',\n                        headers: headers,\n                        body: JSON.stringify(body)\n                    };\n                    return [4 /*yield*/, fetch(endpoint, request)];\n                case 1:\n                    response = _a.sent();\n                    if (!response.ok)\n                        return [3 /*break*/, 3];\n                    return [4 /*yield*/, response.json()];\n                case 2:\n                    responseValue = _a.sent();\n                    completedAuthToken = extractAuthTokenInfoFromResponse(responseValue);\n                    return [2 /*return*/, completedAuthToken];\n                case 3: throw getErrorFromResponse('Generate Auth Token', response);\n            }\n        });\n    });\n}\nfunction getGenerateAuthTokenEndpoint(appConfig, _a) {\n    var fid = _a.fid;\n    return getInstallationsEndpoint(appConfig) + \"/\" + fid + \"/authTokens:generate\";\n}\n/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction getToken(app) {\n    return __awaiter(this, void 0, void 0, function () {\n        var appConfig;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    appConfig = extractAppConfig(app);\n                    return [4 /*yield*/, completeInstallationRegistration(appConfig)];\n                case 1:\n                    _a.sent();\n                    // At this point we either have a Registered Installation in the DB, or we've\n                    // already thrown an error.\n                    return [2 /*return*/, fetchAuthToken(appConfig)];\n            }\n        });\n    });\n}\nfunction completeInstallationRegistration(appConfig) {\n    return __awaiter(this, void 0, void 0, function () {\n        var _a, installationEntry, registrationPromise;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0: return [4 /*yield*/, getInstallationEntry(appConfig)];\n                case 1:\n                    _a = _b.sent(), installationEntry = _a.installationEntry, registrationPromise = _a.registrationPromise;\n                    if (!registrationPromise)\n                        return [3 /*break*/, 3];\n                    // A createInstallation request is in progress. Wait until it finishes.\n                    return [4 /*yield*/, registrationPromise];\n                case 2:\n                    // A createInstallation request is in progress. Wait until it finishes.\n                    _b.sent();\n                    return [3 /*break*/, 4];\n                case 3:\n                    if (installationEntry.registrationStatus !== 2 /* COMPLETED */) {\n                        // Installation ID can't be registered.\n                        throw ERROR_FACTORY.create(\"create-installation-failed\" /* CREATE_INSTALLATION_FAILED */);\n                    }\n                    _b.label = 4;\n                case 4: return [2 /*return*/];\n            }\n        });\n    });\n}\nfunction fetchAuthToken(appConfig) {\n    return __awaiter(this, void 0, void 0, function () {\n        var tokenPromise, entry, authToken, _a;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0: return [4 /*yield*/, update(appConfig, function (oldEntry) {\n                        if (!isEntryRegistered(oldEntry)) {\n                            throw ERROR_FACTORY.create(\"not-registered\" /* NOT_REGISTERED */);\n                        }\n                        var oldAuthToken = oldEntry.authToken;\n                        if (isAuthTokenValid(oldAuthToken)) {\n                            // There is a valid token in the DB.\n                            return oldEntry;\n                        }\n                        else if (oldAuthToken.requestStatus === 1 /* IN_PROGRESS */) {\n                            // There already is a token request in progress.\n                            tokenPromise = waitUntilAuthTokenRequest(appConfig);\n                            return oldEntry;\n                        }\n                        else {\n                            // No token or token expired.\n                            if (!navigator.onLine) {\n                                throw ERROR_FACTORY.create(\"app-offline\" /* APP_OFFLINE */);\n                            }\n                            var inProgressEntry = makeAuthTokenRequestInProgressEntry(oldEntry);\n                            tokenPromise = fetchAuthTokenFromServer(appConfig, inProgressEntry);\n                            return inProgressEntry;\n                        }\n                    })];\n                case 1:\n                    entry = _b.sent();\n                    if (!tokenPromise)\n                        return [3 /*break*/, 3];\n                    return [4 /*yield*/, tokenPromise];\n                case 2:\n                    _a = _b.sent();\n                    return [3 /*break*/, 4];\n                case 3:\n                    _a = entry.authToken;\n                    _b.label = 4;\n                case 4:\n                    authToken = _a;\n                    return [2 /*return*/, authToken.token];\n            }\n        });\n    });\n}\n/**\n * Call only if FID is registered and Auth Token request is in progress.\n */\nfunction waitUntilAuthTokenRequest(appConfig) {\n    return __awaiter(this, void 0, void 0, function () {\n        var entry, authToken;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, updateAuthTokenRequest(appConfig)];\n                case 1:\n                    entry = _a.sent();\n                    _a.label = 2;\n                case 2:\n                    if (!(entry.authToken.requestStatus === 1 /* IN_PROGRESS */))\n                        return [3 /*break*/, 5];\n                    // generateAuthToken still in progress.\n                    return [4 /*yield*/, sleep(100)];\n                case 3:\n                    // generateAuthToken still in progress.\n                    _a.sent();\n                    return [4 /*yield*/, updateAuthTokenRequest(appConfig)];\n                case 4:\n                    entry = _a.sent();\n                    return [3 /*break*/, 2];\n                case 5:\n                    authToken = entry.authToken;\n                    if (authToken.requestStatus === 0 /* NOT_STARTED */) {\n                        throw ERROR_FACTORY.create(\"generate-token-failed\" /* GENERATE_TOKEN_FAILED */);\n                    }\n                    else {\n                        return [2 /*return*/, authToken];\n                    }\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\n/**\n * Called only if there is a GenerateAuthToken request in progress.\n *\n * Updates the InstallationEntry in the DB based on the status of the\n * GenerateAuthToken request.\n *\n * Returns the updated InstallationEntry.\n */\nfunction updateAuthTokenRequest(appConfig) {\n    return update(appConfig, function (oldEntry) {\n        if (!isEntryRegistered(oldEntry)) {\n            throw ERROR_FACTORY.create(\"not-registered\" /* NOT_REGISTERED */);\n        }\n        var oldAuthToken = oldEntry.authToken;\n        if (hasAuthTokenRequestTimedOut(oldAuthToken)) {\n            return __assign({}, oldEntry, { authToken: { requestStatus: 0 /* NOT_STARTED */ } });\n        }\n        return oldEntry;\n    });\n}\nfunction fetchAuthTokenFromServer(appConfig, installationEntry) {\n    return __awaiter(this, void 0, void 0, function () {\n        var authToken, updatedInstallationEntry, e_1, updatedInstallationEntry;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    _a.trys.push([0, 3, , 8]);\n                    return [4 /*yield*/, generateAuthToken(appConfig, installationEntry)];\n                case 1:\n                    authToken = _a.sent();\n                    updatedInstallationEntry = __assign({}, installationEntry, { authToken: authToken });\n                    return [4 /*yield*/, set(appConfig, updatedInstallationEntry)];\n                case 2:\n                    _a.sent();\n                    return [2 /*return*/, authToken];\n                case 3:\n                    e_1 = _a.sent();\n                    if (!(isServerError(e_1) && (e_1.serverCode === 401 || e_1.serverCode === 404)))\n                        return [3 /*break*/, 5];\n                    // Server returned a \"FID not found\" or a \"Invalid authentication\" error.\n                    // Generate a new ID next time.\n                    return [4 /*yield*/, remove(appConfig)];\n                case 4:\n                    // Server returned a \"FID not found\" or a \"Invalid authentication\" error.\n                    // Generate a new ID next time.\n                    _a.sent();\n                    return [3 /*break*/, 7];\n                case 5:\n                    updatedInstallationEntry = __assign({}, installationEntry, { authToken: { requestStatus: 0 /* NOT_STARTED */ } });\n                    return [4 /*yield*/, set(appConfig, updatedInstallationEntry)];\n                case 6:\n                    _a.sent();\n                    _a.label = 7;\n                case 7: throw e_1;\n                case 8: return [2 /*return*/];\n            }\n        });\n    });\n}\nfunction isEntryRegistered(installationEntry) {\n    return (installationEntry !== undefined &&\n        installationEntry.registrationStatus === 2 /* COMPLETED */);\n}\nfunction isAuthTokenValid(authToken) {\n    return (authToken.requestStatus === 2 /* COMPLETED */ &&\n        !isAuthTokenExpired(authToken));\n}\nfunction isAuthTokenExpired(authToken) {\n    var now = Date.now();\n    return (now < authToken.creationTime ||\n        authToken.creationTime + authToken.expiresIn < now + TOKEN_EXPIRATION_BUFFER);\n}\n/** Returns an updated InstallationEntry with an InProgressAuthToken. */\nfunction makeAuthTokenRequestInProgressEntry(oldEntry) {\n    var inProgressAuthToken = {\n        requestStatus: 1 /* IN_PROGRESS */,\n        requestTime: Date.now()\n    };\n    return __assign({}, oldEntry, { authToken: inProgressAuthToken });\n}\nfunction hasAuthTokenRequestTimedOut(authToken) {\n    return (authToken.requestStatus === 1 /* IN_PROGRESS */ &&\n        authToken.requestTime + PENDING_TIMEOUT_MS < Date.now());\n}\n/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction deleteInstallation(appConfig, installationEntry) {\n    return __awaiter(this, void 0, void 0, function () {\n        var endpoint, headers, request, response;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    endpoint = getDeleteEndpoint(appConfig, installationEntry);\n                    headers = getHeadersWithAuth(appConfig, installationEntry);\n                    request = {\n                        method: 'DELETE',\n                        headers: headers\n                    };\n                    return [4 /*yield*/, fetch(endpoint, request)];\n                case 1:\n                    response = _a.sent();\n                    if (!response.ok) {\n                        throw getErrorFromResponse('Delete Installation', response);\n                    }\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\nfunction getDeleteEndpoint(appConfig, _a) {\n    var fid = _a.fid;\n    return getInstallationsEndpoint(appConfig) + \"/\" + fid;\n}\n/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction deleteInstallation$1(app) {\n    return __awaiter(this, void 0, void 0, function () {\n        var appConfig, entry;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    appConfig = extractAppConfig(app);\n                    return [4 /*yield*/, update(appConfig, function (oldEntry) {\n                            if (oldEntry &&\n                                oldEntry.registrationStatus === 0 /* NOT_STARTED */) {\n                                // Delete the unregistered entry without sending a deleteInstallation request.\n                                return undefined;\n                            }\n                            return oldEntry;\n                        })];\n                case 1:\n                    entry = _a.sent();\n                    if (!entry)\n                        return [3 /*break*/, 6];\n                    if (!(entry.registrationStatus === 1 /* IN_PROGRESS */))\n                        return [3 /*break*/, 2];\n                    // Can't delete while trying to register.\n                    throw ERROR_FACTORY.create(\"delete-pending-registration\" /* DELETE_PENDING_REGISTRATION */);\n                case 2:\n                    if (!(entry.registrationStatus === 2 /* COMPLETED */))\n                        return [3 /*break*/, 6];\n                    if (!!navigator.onLine)\n                        return [3 /*break*/, 3];\n                    throw ERROR_FACTORY.create(\"app-offline\" /* APP_OFFLINE */);\n                case 3: return [4 /*yield*/, deleteInstallation(appConfig, entry)];\n                case 4:\n                    _a.sent();\n                    return [4 /*yield*/, remove(appConfig)];\n                case 5:\n                    _a.sent();\n                    _a.label = 6;\n                case 6: return [2 /*return*/];\n            }\n        });\n    });\n}\n/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction registerInstallations(instance) {\n    var installationsName = 'installations';\n    var factoryMethod = function (app) {\n        // Throws if app isn't configured properly.\n        extractAppConfig(app);\n        return {\n            app: app,\n            getId: function () { return getId(app); },\n            getToken: function () { return getToken(app); },\n            delete: function () { return deleteInstallation$1(app); }\n        };\n    };\n    instance.INTERNAL.registerService(installationsName, factoryMethod);\n}\nregisterInstallations(firebase);\nexport { registerInstallations };\n//# sourceMappingURL=index.esm.js.map\n",null]}