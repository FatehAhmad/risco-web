{"remainingRequest":"D:\\FAR\\Projects\\Risco - Working Copy\\risco-web\\risco-web\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!D:\\FAR\\Projects\\Risco - Working Copy\\risco-web\\risco-web\\node_modules\\@angular\\fire\\database\\list\\create-reference.js","dependencies":[{"path":"D:\\FAR\\Projects\\Risco - Working Copy\\risco-web\\risco-web\\node_modules\\@angular\\fire\\database\\list\\create-reference.js","mtime":499162500000},{"path":"D:\\FAR\\Projects\\Risco - Working Copy\\risco-web\\risco-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1582123237433},{"path":"D:\\FAR\\Projects\\Risco - Working Copy\\risco-web\\risco-web\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1527226929000}],"contextDependencies":[],"result":["/** PURE_IMPORTS_START _snapshot_changes,_state_changes,_audit_trail,_data_operation,_remove,rxjs_operators PURE_IMPORTS_END */\nimport { snapshotChanges } from './snapshot-changes';\nimport { stateChanges } from './state-changes';\nimport { auditTrail } from './audit-trail';\nimport { createDataOperationMethod } from './data-operation';\nimport { createRemoveMethod } from './remove';\nimport { map } from 'rxjs/operators';\nexport function createListReference(query, afDatabase) {\n    var outsideAngularScheduler = afDatabase.schedulers.outsideAngular;\n    return {\n        query: query,\n        update: createDataOperationMethod(query.ref, 'update'),\n        set: createDataOperationMethod(query.ref, 'set'),\n        push: function (data) { return query.ref.push(data); },\n        remove: createRemoveMethod(query.ref),\n        snapshotChanges: function (events) {\n            return snapshotChanges(query, events, outsideAngularScheduler).pipe(afDatabase.keepUnstableUntilFirst);\n        },\n        stateChanges: function (events) {\n            return stateChanges(query, events, outsideAngularScheduler).pipe(afDatabase.keepUnstableUntilFirst);\n        },\n        auditTrail: function (events) {\n            return auditTrail(query, events, outsideAngularScheduler).pipe(afDatabase.keepUnstableUntilFirst);\n        },\n        valueChanges: function (events) {\n            var snapshotChanges$ = snapshotChanges(query, events, outsideAngularScheduler);\n            return snapshotChanges$.pipe(afDatabase.keepUnstableUntilFirst, map(function (actions) { return actions.map(function (a) { return a.payload.val(); }); }));\n        }\n    };\n}\n//# sourceMappingURL=create-reference.js.map\n",null]}