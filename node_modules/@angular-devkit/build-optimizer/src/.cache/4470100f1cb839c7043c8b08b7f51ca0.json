{"remainingRequest":"D:\\FAR\\Projects\\Risco - Working Copy\\risco-web\\risco-web\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!D:\\FAR\\Projects\\Risco - Working Copy\\risco-web\\risco-web\\node_modules\\ng2-filter-pipe\\dist\\src\\ng2-filter.pipe.js","dependencies":[{"path":"D:\\FAR\\Projects\\Risco - Working Copy\\risco-web\\risco-web\\node_modules\\ng2-filter-pipe\\dist\\src\\ng2-filter.pipe.js","mtime":1496314435000},{"path":"D:\\FAR\\Projects\\Risco - Working Copy\\risco-web\\risco-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1582123237433},{"path":"D:\\FAR\\Projects\\Risco - Working Copy\\risco-web\\risco-web\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1527226929000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Created by vadimdez on 28/06/16.\n */\nvar core_1 = require(\"@angular/core\");\nvar Ng2FilterPipe = /*@__PURE__*/ (function () {\n    function Ng2FilterPipe() {\n    }\n    Ng2FilterPipe.prototype.filterByString = function (filter) {\n        if (filter) {\n            filter = filter.toLowerCase();\n        }\n        return function (value) {\n            return !filter || (value ? ('' + value).toLowerCase().indexOf(filter) !== -1 : false);\n        };\n    };\n    Ng2FilterPipe.prototype.filterByBoolean = function (filter) {\n        return function (value) {\n            return Boolean(value) === filter;\n        };\n    };\n    Ng2FilterPipe.prototype.filterByObject = function (filter) {\n        var _this = this;\n        return function (value) {\n            for (var key in filter) {\n                if (key === '$or') {\n                    if (!_this.filterByOr(filter.$or)(_this.getValue(value))) {\n                        return false;\n                    }\n                    continue;\n                }\n                if (!value.hasOwnProperty(key) && !Object.getOwnPropertyDescriptor(Object.getPrototypeOf(value), key)) {\n                    return false;\n                }\n                var val = _this.getValue(value[key]);\n                var filterType = typeof filter[key];\n                var isMatching = void 0;\n                if (filterType === 'boolean') {\n                    isMatching = _this.filterByBoolean(filter[key])(val);\n                }\n                else if (filterType === 'string') {\n                    isMatching = _this.filterByString(filter[key])(val);\n                }\n                else if (filterType === 'object') {\n                    isMatching = _this.filterByObject(filter[key])(val);\n                }\n                else {\n                    isMatching = _this.filterDefault(filter[key])(val);\n                }\n                if (!isMatching) {\n                    return false;\n                }\n            }\n            return true;\n        };\n    };\n    /**\n     * Filter value by $or\n     *\n     * @param filter\n     * @returns {(value:any)=>boolean}\n     */\n    Ng2FilterPipe.prototype.filterByOr = function (filter) {\n        return function (value) {\n            var hasMatch = false;\n            var length = filter.length;\n            var isArray = value instanceof Array;\n            var arrayComparison = function (i) {\n                return value.indexOf(filter[i]) !== -1;\n            };\n            var otherComparison = function (i) {\n                return value === filter[i];\n            };\n            var comparison = isArray ? arrayComparison : otherComparison;\n            for (var i = 0; i < length; i++) {\n                if (comparison(i)) {\n                    hasMatch = true;\n                    break;\n                }\n            }\n            return hasMatch;\n        };\n    };\n    /**\n     * Checks function's value if type is function otherwise same value\n     * @param value\n     * @returns {any}\n     */\n    Ng2FilterPipe.prototype.getValue = function (value) {\n        return typeof value === 'function' ? value() : value;\n    };\n    /**\n     * Defatul filterDefault function\n     *\n     * @param filter\n     * @returns {(value:any)=>boolean}\n     */\n    Ng2FilterPipe.prototype.filterDefault = function (filter) {\n        return function (value) {\n            return filter === undefined || filter == value;\n        };\n    };\n    Ng2FilterPipe.prototype.isNumber = function (value) {\n        return !isNaN(parseInt(value, 10)) && isFinite(value);\n    };\n    Ng2FilterPipe.prototype.transform = function (array, filter) {\n        var type = typeof filter;\n        if (!array) {\n            return array;\n        }\n        if (type === 'boolean') {\n            return array.filter(this.filterByBoolean(filter));\n        }\n        if (type === 'string') {\n            if (this.isNumber(filter)) {\n                return array.filter(this.filterDefault(filter));\n            }\n            return array.filter(this.filterByString(filter));\n        }\n        if (type === 'object') {\n            return array.filter(this.filterByObject(filter));\n        }\n        if (type === 'function') {\n            return array.filter(filter);\n        }\n        return array.filter(this.filterDefault(filter));\n    };\n    Ng2FilterPipe.decorators = [\n        { type: core_1.Pipe, args: [{\n                    name: 'filterBy',\n                    pure: false\n                },] },\n        { type: core_1.Injectable },\n    ];\n    return Ng2FilterPipe;\n}());\nexports.Ng2FilterPipe = Ng2FilterPipe;\n",null]}