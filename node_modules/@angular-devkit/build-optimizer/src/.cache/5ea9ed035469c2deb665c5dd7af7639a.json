{"remainingRequest":"D:\\FAR\\Projects\\Risco - Working Copy\\risco-web\\risco-web\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!D:\\FAR\\Projects\\Risco - Working Copy\\risco-web\\risco-web\\node_modules\\angularfire2\\database\\utils.js","dependencies":[{"path":"D:\\FAR\\Projects\\Risco - Working Copy\\risco-web\\risco-web\\node_modules\\angularfire2\\database\\utils.js","mtime":499162500000},{"path":"D:\\FAR\\Projects\\Risco - Working Copy\\risco-web\\risco-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1582123237433},{"path":"D:\\FAR\\Projects\\Risco - Working Copy\\risco-web\\risco-web\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1527226929000}],"contextDependencies":[],"result":["export function isString(value) {\n    return typeof value === 'string';\n}\nexport function isFirebaseDataSnapshot(value) {\n    return typeof value.exportVal === 'function';\n}\nexport function isNil(obj) {\n    return obj === undefined || obj === null;\n}\nexport function isFirebaseRef(value) {\n    return typeof value.set === 'function';\n}\nexport function getRef(database, pathRef) {\n    return isFirebaseRef(pathRef) ? pathRef\n        : database.ref(pathRef);\n}\nexport function checkOperationCases(item, cases) {\n    if (isString(item)) {\n        return cases.stringCase();\n    }\n    else if (isFirebaseRef(item)) {\n        return cases.firebaseCase();\n    }\n    else if (isFirebaseDataSnapshot(item)) {\n        return cases.snapshotCase();\n    }\n    throw new Error(\"Expects a string, snapshot, or reference. Got: \" + typeof item);\n}\n//# sourceMappingURL=utils.js.map",null]}